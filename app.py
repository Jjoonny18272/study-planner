import streamlit as st
import json
import os

def load_data(filename):
    if os.path.exists(filename):
        with open(filename, 'r') as f:
            return json.load(f)
    return []

def save_data(filename, data):
    with open(filename, 'w') as f:
        json.dump(data, f, indent=2)

st.title("üìö ‡πÅ‡∏≠‡∏û‡∏à‡∏±‡∏î‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏≠‡πà‡∏≤‡∏ô‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠")

menu = st.sidebar.selectbox("‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏ô‡πâ‡∏≤", ["‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ", "‡∏à‡∏±‡∏î‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡πÄ‡∏ß‡∏•‡∏≤", "‡∏î‡∏π‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏≠‡πà‡∏≤‡∏ô‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠", "‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô / ‡∏™‡∏£‡∏∏‡∏õ"])

if menu == "‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ":
    st.header("üìù ‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô")
    name = st.text_input("‡∏ä‡∏∑‡πà‡∏≠")
    email = st.text_input("‡∏≠‡∏µ‡πÄ‡∏°‡∏•")
    level = st.selectbox("‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏ä‡∏±‡πâ‡∏ô", ["‡∏°.‡∏ï‡πâ‡∏ô", "‡∏°.‡∏õ‡∏•‡∏≤‡∏¢", "‡∏°‡∏´‡∏≤‡∏ß‡∏¥‡∏ó‡∏¢‡∏≤‡∏•‡∏±‡∏¢"])
    if st.button("‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å"):
        users = load_data("users.json")
        users.append({"name": name, "email": email, "level": level})
        save_data("users.json", users)
        st.success("‚úÖ ‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!")

elif menu == "‡∏à‡∏±‡∏î‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡πÄ‡∏ß‡∏•‡∏≤":
    st.header("üóìÔ∏è ‡∏à‡∏±‡∏î‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡∏≠‡πà‡∏≤‡∏ô‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠")
    subjects = ["‡∏Ñ‡∏ì‡∏¥‡∏ï", "‡∏ß‡∏¥‡∏ó‡∏¢‡πå", "‡∏≠‡∏±‡∏á‡∏Å‡∏§‡∏©", "‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏®‡∏≤‡∏™‡∏ï‡∏£‡πå", "‡∏≠‡∏∑‡πà‡∏ô ‡πÜ"]
    subject = st.selectbox("‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ß‡∏¥‡∏ä‡∏≤", subjects)
    date = st.date_input("‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏≠‡πà‡∏≤‡∏ô")
    start_time = st.time_input("‡πÄ‡∏ß‡∏•‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏≠‡πà‡∏≤‡∏ô")
    end_time = st.time_input("‡πÄ‡∏ß‡∏•‡∏≤‡∏™‡∏¥‡πâ‡∏ô‡∏™‡∏∏‡∏î")
    
    if st.button("‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏ï‡∏≤‡∏£‡∏≤‡∏á"):
        schedule = load_data("schedule.json")
        schedule.append({
            "subject": subject,
            "date": str(date),
            "start": start_time.strftime("%H:%M"),
            "end": end_time.strftime("%H:%M"),
            "done": False
        })
        save_data("schedule.json", schedule)
        st.success("‚úÖ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!")

elif menu == "‡∏î‡∏π‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏≠‡πà‡∏≤‡∏ô‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠":
    st.header("üìÖ ‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏≠‡πà‡∏≤‡∏ô‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠")
    schedule = load_data("schedule.json")
    if not schedule:
        st.info("‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏≠‡πà‡∏≤‡∏ô‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠")
    else:
        for idx, item in enumerate(schedule):
            st.write(f"{idx+1}. ‡∏ß‡∏¥‡∏ä‡∏≤: {item['subject']} | ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà: {item['date']} | ‡πÄ‡∏ß‡∏•‡∏≤: {item['start']} - {item['end']} | ‡∏≠‡πà‡∏≤‡∏ô‡πÅ‡∏•‡πâ‡∏ß: {'‚úî' if item['done'] else '‚úò'}")
            col1, col2 = st.columns(2)
            with col1:
                if st.button(f"‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç {idx+1}"):
                    st.warning("‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏ï‡∏≠‡∏ô‡∏ô‡∏µ‡πâ")
            with col2:
                if st.button(f"‡∏•‡∏ö {idx+1}"):
                    schedule.pop(idx)
                    save_data("schedule.json", schedule)
                    st.experimental_rerun()

elif menu == "‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô / ‡∏™‡∏£‡∏∏‡∏õ":
    st.header("üîî ‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô / ‡∏™‡∏£‡∏∏‡∏õ‡∏Å‡∏≤‡∏£‡∏≠‡πà‡∏≤‡∏ô")
    schedule = load_data("schedule.json")
    for idx, item in enumerate(schedule):
        st.write(f"{idx+1}. ‡∏ß‡∏¥‡∏ä‡∏≤: {item['subject']} | ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà: {item['date']} | ‡πÄ‡∏ß‡∏•‡∏≤: {item['start']} - {item['end']} | ‡∏≠‡πà‡∏≤‡∏ô‡πÅ‡∏•‡πâ‡∏ß: {'‚úî' if item['done'] else '‚úò'}")
        if not item['done']:
            if st.button(f"‚úì ‡∏≠‡πà‡∏≤‡∏ô‡πÄ‡∏™‡∏£‡πá‡∏à {idx+1}"):
                schedule[idx]['done'] = True
                save_data("schedule.json", schedule)
                st.experimental_rerun()
